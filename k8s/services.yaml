# API Gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ${NAMESPACE}
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: ${REGISTRY}/api-gateway:${VERSION}
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: DATABASE_URL
          value: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
        - name: DATABASE_USERNAME
          value: ${POSTGRES_USER}
        - name: DATABASE_PASSWORD
          value: ${POSTGRES_PASSWORD}
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: ${NAMESPACE}
spec:
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 8080
---
# Auth Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: ${NAMESPACE}
  labels:
    app: auth-service
spec:
  replicas: ${AUTH_SERVICE_REPLICAS}
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: ${AUTH_SERVICE_IMAGE}:${VERSION}
        ports:
        - containerPort: ${AUTH_SERVICE_PORT}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: ${SPRING_PROFILES}
        - name: DATABASE_URL
          value: ${DATABASE_URL}
        - name: DATABASE_USERNAME
          value: ${POSTGRES_USER}
        - name: DATABASE_PASSWORD
          value: ${POSTGRES_PASSWORD}
        - name: REDIS_HOST
          value: ${REDIS_HOST}
        - name: REDIS_PORT
          value: "${REDIS_PORT}"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: ${AUTH_SERVICE_PORT}
          initialDelaySeconds: ${HEALTH_INITIAL_DELAY}
          periodSeconds: ${HEALTH_PERIOD}
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: ${NAMESPACE}
spec:
  selector:
    app: auth-service
  ports:
  - port: 80
    targetPort: ${AUTH_SERVICE_PORT}
---
# Meeting Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meeting-agent
  namespace: ${NAMESPACE}
  labels:
    app: meeting-agent
spec:
  replicas: ${MEETING_AGENT_REPLICAS}
  selector:
    matchLabels:
      app: meeting-agent
  template:
    metadata:
      labels:
        app: meeting-agent
    spec:
      containers:
      - name: meeting-agent
        image: ${MEETING_AGENT_IMAGE}:${VERSION}
        ports:
        - containerPort: ${MEETING_AGENT_PORT}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: ${SPRING_PROFILES}
        - name: DATABASE_URL
          value: ${DATABASE_URL}
        - name: DATABASE_USERNAME
          value: ${POSTGRES_USER}
        - name: DATABASE_PASSWORD
          value: ${POSTGRES_PASSWORD}
        - name: REDIS_HOST
          value: ${REDIS_HOST}
        - name: REDIS_PORT
          value: "${REDIS_PORT}"
        - name: API_GATEWAY_URL
          value: http://api-gateway
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: ${MEETING_AGENT_PORT}
          initialDelaySeconds: ${HEALTH_INITIAL_DELAY}
          periodSeconds: ${HEALTH_PERIOD}
---
apiVersion: v1
kind: Service
metadata:
  name: meeting-agent
  namespace: ${NAMESPACE}
spec:
  selector:
    app: meeting-agent
  ports:
  - port: 80
    targetPort: ${MEETING_AGENT_PORT}
---
# Call Agent
apiVersion: apps/v1
kind: Deployment
metadata:
  name: call-agent
  namespace: ${NAMESPACE}
  labels:
    app: call-agent
spec:
  replicas: ${CALL_AGENT_REPLICAS}
  selector:
    matchLabels:
      app: call-agent
  template:
    metadata:
      labels:
        app: call-agent
    spec:
      containers:
      - name: call-agent
        image: ${CALL_AGENT_IMAGE}:${VERSION}
        ports:
        - containerPort: ${CALL_AGENT_PORT}
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: ${SPRING_PROFILES}
        - name: DATABASE_URL
          value: ${DATABASE_URL}
        - name: DATABASE_USERNAME
          value: ${POSTGRES_USER}
        - name: DATABASE_PASSWORD
          value: ${POSTGRES_PASSWORD}
        - name: REDIS_HOST
          value: ${REDIS_HOST}
        - name: REDIS_PORT
          value: "${REDIS_PORT}"
        - name: API_GATEWAY_URL
          value: http://api-gateway
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: ${CALL_AGENT_PORT}
          initialDelaySeconds: ${HEALTH_INITIAL_DELAY}
          periodSeconds: ${HEALTH_PERIOD}
---
apiVersion: v1
kind: Service
metadata:
  name: call-agent
  namespace: ${NAMESPACE}
spec:
  selector:
    app: call-agent
  ports:
  - port: 80
    targetPort: ${CALL_AGENT_PORT} 